{"version":3,"sources":["Components/ModalComp/ModalComp.js","Components/SearchComp/SearchComp.js","Components/Modal2ButtonsComp/Modal2ButtonsComp.js","Components/FilmCardComp/FilmCardComp.js","Components/FilmListComp/FilmListComp.js","Components/FooterComp/FooterComp.js","Components/SpinnerComp/SpinnerComp.js","lib.js","Pages/SearchPage/SearchPage.js","Components/FilmDetailComp/FilmDetailComp.js","Pages/FilmPage/FilmPage.js","Pages/FavoritesPage/FavoritesPage.js","App.js","index.js"],"names":["ModalComp","props","el","document","createElement","modalRoot","getElementById","this","appendChild","removeChild","ReactDOM","createPortal","children","React","Component","SearchComp","handleSubmit","e","preventDefault","querySelector","value","onSubmit","setState","showModalEmptySearch","handleByTitleClick","onSearchByChange","handleByDirectorClick","handleCloseModal","handleGoToFavorites","window","location","assign","state","byTitleClassName","byDirectorClassName","searchByTitle","className","type","onClick","onChange","onSearchStringChange","searchString","Modal2ButtonsComp","message","actionButtonName","onActionClick","onCloseClick","FilmCardComp","handleOpenModalClick","flagAddToFavorites","showModalAddToFavorites","flagRemoveFromFavorites","showModalRemoveFromFavorites","handleAddClick","favString","localStorage","getItem","favArr","split","includes","id","setItem","join","handleCloseClick","handleRemoveClick","newFav","filter","item","Number","refreshFilms","src","posterUrl","alt","onPosterClick","title","year","genres","runtime","director","FilmListComp","href","listElement","filmList","map","key","toString","handlePosterClick","renderFirstLine","FooterComp","SpinnerComp","isLoading","getFilmList","searchArray","byTitle","byDirector","byID","fetch","then","response","ok","json","Error","status","data","catch","console","log","fullList","i","toUpperCase","SearchPage","URLFilm","match","params","filmName","url","URL","searchParams","has","URLSearchByTitle","Boolean","get","handleSearchStringChange","bind","handleSearchByChange","handleSearch","handleSortByRuntime","handleSortByDate","target","isbyTitle","result","origin","set","byDate","compare","item1","item2","newList","sort","sortFilms","length","loadFilmListToState","Fragment","renderFistLine","FilmDetailComp","plot","actors","FilmPage","filmTitle","filmDesc","Array","isArray","getFilmDesc","getFilmListByDirector","FavoritesPage","getFavoritesArray","loadFilmById","idArray","favoritesList","handleGoToSerach","App","path","component","render","StrictMode"],"mappings":"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","file":"static/js/main.4d23d390.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './ModalComp.scss';\r\n\r\nexport class ModalComp extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.el = document.createElement('div');\r\n    this.modalRoot = document.getElementById('modal-root');\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.modalRoot.appendChild(this.el);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.modalRoot.removeChild(this.el);\r\n  }\r\n\r\n  render() {\r\n    return ReactDOM.createPortal(\r\n      this.props.children,\r\n      this.el\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './SearchComp.scss';\r\nimport {ModalComp} from './../ModalComp/ModalComp';\r\n\r\n\r\nexport class SearchComp extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      showModalEmptySearch:false,\r\n    }\r\n  }\r\n\r\n  handleSubmit =(e) => {\r\n    e.preventDefault();\r\n    let el = document.querySelector(\".search-comp__search-string\");\r\n    if (el) {\r\n      if (el.value) {\r\n        this.props.onSubmit();\r\n        return;\r\n      }\r\n    }\r\n    this.setState({\r\n      showModalEmptySearch:true,\r\n    });\r\n  }\r\n\r\n  handleByTitleClick =()=>{\r\n    this.props.onSearchByChange(true);\r\n  }\r\n\r\n  handleByDirectorClick = ()=>{\r\n    this.props.onSearchByChange(false);\r\n  }\r\n  \r\n  handleCloseModal= ()=> {\r\n    this.setState({\r\n      showModalEmptySearch:false,\r\n    });\r\n  }\r\n\r\n  handleGoToFavorites=()=>{\r\n    window.location.assign('/favorites')\r\n  }\r\n\r\n  render(){\r\n\r\n    let byTitleClassName=\"search-comp__search-by-title\";\r\n    let byDirectorClassName=\"search-comp__search-by-director\";\r\n    if (this.props.searchByTitle) {\r\n      byTitleClassName = byTitleClassName + \" search-comp__search-by_selected\"\r\n    } else {\r\n      byDirectorClassName = byDirectorClassName + \" search-comp__search-by_selected\"\r\n    }\r\n\r\n    return (\r\n      <div className=\"search-comp-outer-container\">\r\n        <div className=\"search-comp-inner-container\">\r\n\r\n          <div className=\"search-comp__caption1\">\r\n            netflixroulette\r\n            <input \r\n              type='button' \r\n              className=\"search-comp__button\" \r\n              onClick={this.handleGoToFavorites}\r\n              value='Go to FAVORITES'/>\r\n          </div>\r\n          <div className=\"search-comp__caption2\">FIND YOUR MOVIE</div>\r\n\r\n          <form onSubmit={this.handleSubmit} >\r\n\r\n            <input type=\"text\"\r\n              className=\"search-comp__search-string\"\r\n              onChange={this.props.onSearchStringChange}\r\n              value={this.props.searchString}\r\n            />\r\n          \r\n            <div className=\"search-comp__buttom-line\">\r\n              <div>\r\n                <span className=\"search-comp__search-by-caption\">SEARCH BY</span>\r\n                <input className={byTitleClassName} type=\"button\" onClick={this.handleByTitleClick} value=\" TITLE \"/>\r\n                <input className={byDirectorClassName} type=\"button\" onClick={this.handleByDirectorClick} value=\"DIRECTOR\"/>\r\n              </div>\r\n\r\n              <div>\r\n                <input className=\"search-comp__button\" type=\"submit\" value=\"  SEARCH  \"/>\r\n              </div>\r\n            </div>  \r\n\r\n          </form>\r\n\r\n          {this.state.showModalEmptySearch && (\r\n          <ModalComp>\r\n            <div className='search-comp__modal-nothing-to-search-background'>\r\n              <div className='search-comp__modal-nothing-to-search-outer-container'>\r\n                There is nothing to search. Please enter non empty string to search.\r\n                <div className='search-comp__modal-nothing-to-search-button-container'>\r\n                  <input \r\n                    className='search-comp__modal-nothing-to-search-button' \r\n                    type='button' value='CLOSE' onClick={this.handleCloseModal}/>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </ModalComp> )}\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {ModalComp} from './../ModalComp/ModalComp';\r\nimport  './Modal2ButtonsComp.scss';\r\n\r\nexport function Modal2ButtonsComp(props){\r\n\r\n  return(\r\n    <ModalComp>\r\n      <div className='modal-2-buttons__background'>\r\n        <div className='modal-2-buttons__outer-container'>\r\n          <div>\r\n            {props.message}\r\n          </div>\r\n          <div className='modal-2-buttons__button-container'>\r\n            <input \r\n              className='modal-2-buttons__action-button' \r\n              type=\"button\" \r\n              value={props.actionButtonName}\r\n              onClick={props.onActionClick}/>\r\n            <input \r\n              className='modal-2-buttons__action-button' \r\n              type=\"button\" \r\n              value=\"CLOSE\"\r\n              onClick={props.onCloseClick}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ModalComp>\r\n  )\r\n}","import React from 'react';\r\nimport './FilmCardComp.scss';\r\nimport {ModalComp} from './../ModalComp/ModalComp';\r\nimport {Modal2ButtonsComp} from './../Modal2ButtonsComp/Modal2ButtonsComp';\r\n\r\nexport class FilmCardComp extends React.Component { \r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      showModalAddToFavorites: false,\r\n      showModalRemoveFromFavorites: false\r\n    }\r\n  }\r\n\r\n  handleOpenModalClick=()=>{\r\n    if (this.props.flagAddToFavorites) {\r\n      this.setState({\r\n        showModalAddToFavorites: true,\r\n      });\r\n    } else if (this.props.flagRemoveFromFavorites) {\r\n      this.setState({\r\n        showModalRemoveFromFavorites:true, \r\n      })\r\n    }\r\n  }\r\n\r\n  handleAddClick=()=>{\r\n    const favString = localStorage.getItem('favoritesArray');\r\n    if (favString) {\r\n      let favArr = favString.split(',');\r\n      if (!favArr.includes(\"\"+this.props.id)) {\r\n        localStorage.setItem('favoritesArray', [...favArr, [this.props.id]].join(','));\r\n      }\r\n    } else {\r\n      localStorage.setItem('favoritesArray', [this.props.id].join(','));\r\n    }\r\n\r\n    this.setState({\r\n      showModalAddToFavorites: false,\r\n    });\r\n  }\r\n\r\n  handleCloseClick=()=>{\r\n    this.setState({\r\n      showModalAddToFavorites: false,\r\n      showModalRemoveFromFavorites: false,\r\n    });\r\n  }\r\n\r\n  handleRemoveClick=(id)=>{\r\n    const favString = localStorage.getItem('favoritesArray');\r\n    if (favString) {\r\n      const favArr = favString.split(',');\r\n      const newFav= favArr.filter((item)=>{return !( Number(item) == Number(id) )})\r\n      localStorage.setItem('favoritesArray', newFav.join(','));\r\n    }\r\n\r\n    this.handleCloseClick();\r\n    this.props.refreshFilms();\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className='film-card-comp-container'>\r\n        \r\n        <img \r\n          className='film-card-comp__poster' \r\n          src={this.props.posterUrl} alt='film poster'\r\n          onClick={this.props.onPosterClick}\r\n        />\r\n        \r\n        <div className='film-card-comp__line1'>\r\n          <span className='film-card-comp__title'>{this.props.title}</span>\r\n          <span className='film-card-comp__year'>{this.props.year}</span>\r\n        </div>\r\n\r\n        <div className='film-card-comp__line2'>\r\n          <div>\r\n            {this.props.genres} <br/>\r\n            Runtime: {this.props.runtime} minute <br/>\r\n            Director: {this.props.director}\r\n          </div>\r\n          <img \r\n            className=\"film-card-comp__star\" \r\n            src='/img/favorites_star.ico' alt='star'\r\n            onClick={this.handleOpenModalClick}/>\r\n        </div>\r\n\r\n        {this.state.showModalAddToFavorites && (\r\n          <Modal2ButtonsComp\r\n            message={`Add film \"${this.props.title}\" by \"${this.props.director}\" to favorites?`}\r\n            actionButtonName = 'ADD'\r\n            onActionClick={this.handleAddClick}\r\n            onCloseClick={this.handleCloseClick}\r\n          />\r\n        )}\r\n\r\n        {this.state.showModalRemoveFromFavorites && (\r\n          <Modal2ButtonsComp\r\n            message={`Remove film \"${this.props.title}\" by \"${this.props.director}\" from favorites?`}\r\n            actionButtonName = 'REMOVE'\r\n            onActionClick={()=>this.handleRemoveClick(this.props.id)}\r\n            onCloseClick={this.handleCloseClick}\r\n          />\r\n        )}\r\n\r\n    </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport {FilmCardComp} from '../FilmCardComp/FilmCardComp'\r\n\r\nimport './FilmListComp.scss';\r\n\r\nexport class FilmListComp extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n\r\n  handlePosterClick(title){\r\n    window.location.href=`/film/${title}`\r\n  }\r\n\r\n  render(){\r\n    let listElement = this.props.filmList.map((item)=>\r\n    <FilmCardComp\r\n      key={item.id}\r\n      id={item.id}\r\n      posterUrl={item.posterUrl}\r\n      year = {item.year}\r\n      genres={item.genres.toString()}\r\n      title = {item.title}\r\n      director = {item.director}\r\n      runtime = {item.runtime}\r\n      onPosterClick = {()=>this.handlePosterClick(item.title)}\r\n      flagAddToFavorites ={this.props.flagAddToFavorites}\r\n      flagRemoveFromFavorites = {this.props.flagRemoveFromFavorites}\r\n      refreshFilms={this.props.refreshFilms}\r\n    />\r\n    );\r\n  \r\n    return(\r\n      <div className=\"film-list-outer-container\">\r\n        <div className=\"film-list-inner-container\">\r\n            {this.props.renderFirstLine}\r\n          <div className='film-list-comp__list'>\r\n            {listElement}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n","import React from 'react'\r\n\r\nimport './FooterComp.scss';\r\n\r\nexport function FooterComp(props){\r\n  return(\r\n    <div className=\"footer-comp-outer-container\">\r\n      <div className=\"footer-comp-inner-container\">\r\n        netflixroulette\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport {ModalComp} from './../ModalComp/ModalComp';\r\nimport './SpinnerComp.scss'\r\n\r\nexport function SpinnerComp(props) {\r\n    if (props.isLoading) {\r\n      return (\r\n      <ModalComp>\r\n      <div className='spinner-comp-background'>\r\n        <img  src='/img/load.gif' alt='spinner' />\r\n      </div>\r\n    </ModalComp>\r\n      )\r\n    } else {\r\n      return null;\r\n    }\r\n}","const url=\"https://my-json-server.typicode.com/michael-916310/my-json-server/movies\";\r\n\r\nfunction loadFilmList (){\r\n  return fetch(url)\r\n  .then(response => {\r\n    if (response.ok) {\r\n      return response.json()\r\n    } else {\r\n      throw new Error(`Fetching data-wrong response-status:${response.status}`);\r\n    }\r\n  }) \r\n  .then(data => {\r\n    return data;\r\n  })\r\n  .catch(e=>console.log(e));\r\n}\r\n\r\nexport function getFilmList({searchString, searchArray, byTitle, byDirector, byID}){\r\n\r\n  return loadFilmList()\r\n    .then((fullList)=>{\r\n\r\n      return fullList.filter((el)=>{\r\n        let i;\r\n        if (byTitle) {\r\n          i = el.title.toUpperCase();\r\n        } else if (byDirector) {\r\n          i = el.director.toUpperCase();\r\n        } else if (byID) {\r\n          i = el.id;\r\n          return searchArray.includes(i);\r\n        } else {\r\n          return false;\r\n        }\r\n        \r\n        return i.includes(searchString.toUpperCase())\r\n      })\r\n\r\n    })\r\n\r\n}","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Fragment } from 'react'\r\n\r\nimport {SearchComp} from '../../Components/SearchComp/SearchComp';\r\nimport {FilmListComp as FilmList} from '../../Components/FilmListComp/FilmListComp';\r\nimport {FooterComp as Footer} from '../../Components/FooterComp/FooterComp';\r\nimport {SpinnerComp} from './../../Components/SpinnerComp/SpinnerComp';\r\n\r\nimport {getFilmList} from '../../lib';\r\nimport './SearchPage.scss';\r\n\r\nexport class SearchPage extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.URLFilm = props.match.params.filmName;\r\n    \r\n    let url = new URL(window.location.href);\r\n    if (!url.searchParams.has('searchByTitle')) {\r\n      this.URLSearchByTitle = true;\r\n      console.log('has',!url.searchParams.has('searchByTitle'))\r\n    }else {\r\n      this.URLSearchByTitle = Boolean(url.searchParams.get('searchByTitle'));\r\n      console.log('get', Boolean(url.searchParams.get('searchByTitle')));\r\n    }\r\n\r\n    console.log(`URLSearchByTitle:${this.URLSearchByTitle}`);\r\n\r\n\r\n    this.state = {\r\n      searchString: this.URLFilm,\r\n      searchByTitle: this.URLSearchByTitle,\r\n      filmList: [],\r\n      isLoading: false,\r\n    };\r\n\r\n    this.handleSearchStringChange = this.handleSearchStringChange.bind(this);\r\n    this.handleSearchByChange = this.handleSearchByChange.bind(this);\r\n    this.handleSearch = this.handleSearch.bind(this);\r\n    this.handleSortByRuntime = this.handleSortByRuntime.bind(this);\r\n    this.handleSortByDate = this.handleSortByDate.bind(this);\r\n  }\r\n\r\n  handleSearchStringChange(e){\r\n    this.setState({\r\n      searchString: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleSearchByChange(isbyTitle){\r\n    this.setState({\r\n      searchByTitle: isbyTitle\r\n    });\r\n  }\r\n  \r\n  loadFilmListToState(){\r\n    this.setState({\r\n      isLoading:true,\r\n    })\r\n    getFilmList({\r\n      searchString:this.state.searchString,\r\n      byTitle:this.state.searchByTitle,\r\n      byDirector: !this.state.searchByTitle,\r\n    })\r\n    .then(result=>{\r\n      this.setState({\r\n        filmList:result,\r\n        isLoading:false,\r\n      });\r\n    });\r\n  }\r\n\r\n  handleSearch(){\r\n    // Если в URL что-то не соотвествует тому что в state - редиректим как в state\r\n    if  ((this.URLFilm !== this.state.searchString) || \r\n        (this.URLSearchByTitle !== this.state.searchByTitle)) {\r\n\r\n      let url= new URL(`/search/${this.state.searchString}`, window.location.origin);\r\n      url.searchParams.set('searchByTitle', this.state.searchByTitle ? 1 :'');\r\n      window.location.assign(url);\r\n    }\r\n  }\r\n\r\n  sortFilms(byDate){\r\n    let compare;\r\n\r\n    if (byDate) {\r\n      compare = (item1, item2)=>{\r\n        return (+item1.year > +item2.year) ? -1 : 1;\r\n      }\r\n    } else {\r\n      compare = (item1, item2)=>{\r\n        return (+item1.runtime > +item2.runtime) ? -1 : 1;\r\n      }\r\n    }\r\n\r\n    let newList = this.state.filmList.sort(compare);\r\n    this.setState({filmList:newList})\r\n  }\r\n\r\n  handleSortByRuntime(e){\r\n    e.preventDefault();\r\n    this.sortFilms(false);\r\n  }\r\n\r\n  handleSortByDate(e){\r\n    e.preventDefault()\r\n    this.sortFilms(true);\r\n  }  \r\n\r\n  /* рендер-пропс для компонента FilmList */\r\n  renderFistLine(){\r\n    let result;\r\n\r\n    if (this.state.filmList.length) {\r\n\r\n     result = (\r\n        /* сформируем строку вверху */\r\n        <Fragment>\r\n          <div className=\"film-list-comp__top-line\">\r\n            <div>\r\n              {this.state.filmList.length} movies found\r\n            </div>\r\n            <div>\r\n              SORT BY\r\n              <a \r\n                className=\"film-list-comp__sort-by-release-date\" \r\n                href=\"#\" \r\n                onClick={this.handleSortByDate}\r\n              >release date</a>\r\n              <a \r\n                className=\"film-list-comp__sort-by-runtime\" \r\n                href=\"#\"\r\n                onClick={this.handleSortByRuntime}\r\n                >runtime</a>\r\n            </div>\r\n          </div>\r\n        </Fragment>\r\n      )\r\n    } \r\n\r\n    return result;\r\n  }\r\n\r\n  componentDidMount(){\r\n    if (this.state.searchString) {\r\n      this.loadFilmListToState();\r\n    }\r\n\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <React.Fragment>\r\n\r\n        <div className='search-page-header'>\r\n          <SearchComp \r\n            searchString={this.state.searchString}\r\n            searchByTitle={this.state.searchByTitle}\r\n\r\n            onSearchStringChange={this.handleSearchStringChange} \r\n            onSubmit={this.handleSearch}\r\n            onSearchByChange = {this.handleSearchByChange}/>\r\n        </div>\r\n\r\n        <div className='search-page-result'>\r\n          {(this.state.filmList.length) ? \r\n            (\r\n            <FilmList \r\n              renderFirstLine={this.renderFistLine()} \r\n              filmList={this.state.filmList}\r\n              flagAddToFavorites={true}\r\n            />) : \r\n            (\r\n              <div className='search-page-empty-result'>No films found</div>\r\n            )\r\n          }\r\n\r\n        </div>\r\n\r\n        <div className='search-page-footer'>\r\n          <Footer/>\r\n        </div>\r\n\r\n        <SpinnerComp isLoading={this.state.isLoading}/>\r\n      </React.Fragment>\r\n      )\r\n    }\r\n} ","import React from 'react';\r\nimport './FilmDetailComp.scss';\r\n\r\nexport function FilmDetailComp(props) {\r\n  \r\n  function goToSerachPage(){\r\n    window.location.href=`/search/${props.director}?searchByTitle=`;\r\n  }\r\n\r\n  function goToFavorites(){\r\n    window.location.assign('/favorites')\r\n  }\r\n  return (\r\n    <div className='film-detail-comp-outer-container'>\r\n      <div className='film-detail-comp-inner-container'>\r\n\r\n        <div className='film-detail-comp__first-line'>\r\n          <div className='film-detail-comp__first-line-caption'>netflixroulette</div>\r\n          <div>\r\n            <input className='film-detail-comp__first-line-button' type='button' value='Go to SEARCH' onClick={goToSerachPage}/>\r\n            <input className='film-detail-comp__first-line-button' type='button' value='Go to FAVORITES' onClick={goToFavorites}/>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='film-detail-comp__totall-details-container'>\r\n          <div className='film-detail-comp__poster'>\r\n            <img className='film-detail-comp__poster-img' src={props.posterUrl} alt='POSTER IMAGE'/>\r\n          </div>\r\n          <div className='film-detail-comp__details'>\r\n            <div className='film-detail-comp__title'>\r\n              {props.title}\r\n            </div>\r\n            <div className='film-detail-comp__year'>\r\n              {props.year} {props.runtime} min\r\n            </div>\r\n            <div className='film-detail-comp__plot'>\r\n              {props.plot}\r\n            </div>\r\n            <div className='film-detail-comp__director'>\r\n              Director: {props.director}\r\n            </div>\r\n            <div className='film-detail-comp__actors'>\r\n              Cast: {props.actors}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport {FilmListComp as FilmList} from '../../Components/FilmListComp/FilmListComp';\r\nimport {FooterComp as Footer} from '../../Components/FooterComp/FooterComp';\r\nimport {FilmDetailComp} from '../../Components/FilmDetailComp/FilmDetailComp';\r\nimport {getFilmList} from '../../lib';\r\nimport {SpinnerComp} from './../../Components/SpinnerComp/SpinnerComp';\r\n\r\nimport './FilmPage.scss'\r\n\r\nexport class FilmPage extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      filmTitle: props.match.params.filmName,\r\n      filmDesc: {\r\n        posterUrl: '',\r\n        title: '',\r\n        year: '',\r\n        runtime: '',\r\n        plot: '',\r\n        director: '',\r\n        actors: ''\r\n      },\r\n      filmList:[],\r\n      isLoading: false,\r\n    }\r\n  }\r\n\r\n  getFilmDesc(){\r\n    if (this.state.filmTitle) {\r\n      this.setState({\r\n        isLoading: true,\r\n      });\r\n      return getFilmList({\r\n        searchString:this.state.filmTitle, \r\n        byTitle:true\r\n      }).then((result)=>{\r\n        if (Array.isArray(result) && result.length === 1) {\r\n          this.setState({\r\n            filmDesc:{\r\n              posterUrl: result[0].posterUrl,\r\n              title: result[0].title,\r\n              year: result[0].year,\r\n              runtime: result[0].runtime,\r\n              plot: result[0].plot,\r\n              director: result[0].director,\r\n              actors: result[0].actors\r\n            },\r\n            isLoading: false,\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  getFilmListByDirector(){\r\n    if (this.state.filmDesc.director){\r\n      this.setState({\r\n        isLoading: true,\r\n      });      \r\n      return getFilmList({\r\n        searchString: this.state.filmDesc.director,\r\n        byDirector:true,\r\n      }).then((result)=>{\r\n        if (result.length>0){\r\n          this.setState({\r\n            filmList:result,\r\n            isLoading: false,\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.getFilmDesc()\r\n      .then(()=>{\r\n        this.getFilmListByDirector();\r\n      });\r\n  }\r\n\r\n\r\n  render(){\r\n\r\n    return(\r\n      <React.Fragment>\r\n        \r\n        <div className='film-page-header'>\r\n          <FilmDetailComp\r\n            posterUrl={this.state.filmDesc.posterUrl}\r\n            title={this.state.filmDesc.title}\r\n            year={this.state.filmDesc.year}\r\n            runtime = {this.state.filmDesc.runtime}\r\n            plot = {this.state.filmDesc.plot}\r\n            director = {this.state.filmDesc.director}\r\n            actors = {this.state.filmDesc.actors}\r\n          />\r\n        </div>\r\n\r\n        <div className='film-page-content'>\r\n          <FilmList \r\n            renderFirstLine={<div>Films by {this.state.filmDesc.director} </div>}\r\n            filmList={this.state.filmList}\r\n            flagAddToFavorites = {true}\r\n            />\r\n        </div>\r\n        \r\n\r\n        <div className='film-page-footer'>\r\n          <Footer/>\r\n        </div>\r\n\r\n        <SpinnerComp isLoading={this.state.isLoading}/>\r\n        \r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport {FooterComp} from './../../Components/FooterComp/FooterComp';\r\nimport {FilmListComp} from './../../Components/FilmListComp/FilmListComp'\r\nimport {getFilmList} from './../../lib';\r\n\r\nimport './FavoritesPage.scss';\r\n\r\nexport class FavoritesPage extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      favoritesList: [],\r\n    }\r\n  }\r\n\r\n  getFavoritesArray=()=>{\r\n    let favString = localStorage.getItem('favoritesArray');\r\n    let favArr=[];\r\n    if (favString) {\r\n      favArr = favString.split(',');\r\n    }   \r\n    return favArr.map((item)=>+item)\r\n  }\r\n\r\n  loadFilmById=(idArray)=>{\r\n    getFilmList({\r\n      searchArray: idArray, \r\n      byID: true,\r\n    }).then((result)=>{\r\n      this.setState({\r\n        favoritesList : result,\r\n      })\r\n    })\r\n  }\r\n\r\n  refreshFilms=()=>{\r\n    this.loadFilmById(this.getFavoritesArray());\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.loadFilmById(this.getFavoritesArray());\r\n  }\r\n\r\n  handleGoToSerach(){\r\n    window.location.assign('/search');\r\n  }\r\n\r\n  \r\n  render(){\r\n\r\n    return(\r\n      <React.Fragment>\r\n        <div className='favorites-page-header'>\r\n          <div className='favorites-page-outer-container'>\r\n            <div className='favorites-page-inner-container'>\r\n              <div className='favorites-page-container'>\r\n                <div className='favorites-page-caption'>\r\n                  YOUR FAVORITES FILMS\r\n                </div>\r\n                <div>\r\n                  <input \r\n                    type='button' \r\n                    className='favorites-page-button'\r\n                    onClick={this.handleGoToSerach}\r\n                    value='go to SEARCH' />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='favorites-page-film-list'>\r\n          {this.state.favoritesList.length === 0 ? \r\n            (\r\n              <div className='favorites-page-empty-result'>No films added to favorites</div>\r\n            )\r\n          : \r\n            (<FilmListComp \r\n              filmList={this.state.favoritesList}\r\n              flagRemoveFromFavorites={true}\r\n              refreshFilms={this.refreshFilms}\r\n            />)\r\n          }\r\n        </div>\r\n\r\n        <div className='favorites-page-fotter'>\r\n          <FooterComp/>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}","import React from 'react';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\n\nimport 'normalize.css';\nimport './App.scss'\n\nimport {SearchPage} from './Pages/SearchPage/SearchPage'\nimport {FilmPage} from './Pages/FilmPage/FilmPage'\nimport {FavoritesPage} from './Pages/FavoritesPage/FavoritesPage'\n\nfunction App() {\n  return (\n    <div className='application-container'>\n      <Router>\n        <Switch>\n\n          <Route path='/search/:filmName' component={SearchPage}/>\n          <Route path='/film/:filmName' component={FilmPage}/>\n          <Route path='/favorites' component ={FavoritesPage}/>\n\n          <Route path='/' component={SearchPage}/>\n\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}